spring.application.name=core-service

spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=100MB

### MINIO CONFIG
minio.url=http://192.168.1.111:8054
minio.access-key=sMw5abaBopFiyVHBlWwv
minio.secret-key=RjIlpoxKyLG8pMZJPZM4W5Q08yRK8Yzygoc1F2iz
minio.bucket=demo

### REDIS CONFIG
#spring.redis.sentinel.master=mymaster
#spring.redis.sentinel.nodes=192.168.1.135:26379, 192.168.1.145:26379

spring.redis.cluster.nodes=192.168.1.111:6379
spring.redis.password=uQz7BmhZps
logging.level.io.lettuce.core: DEBUG
logging.level.org.springframework.data.redis: DEBUG

### SFTP CONFIG
sftp

spring.cloud.stream.kafka.binder.brokers=192.168.1.115:9093
spring.cloud.stream.kafka.binder.configuration.security.protocol=SASL_PLAINTEXT
spring.cloud.stream.kafka.binder.configuration.sasl.mechanism=PLAIN
spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";
spring.cloud.stream.kafka.binder.auto-create-topics=true
spring.cloud.stream.kafka.binder.consumer-properties.max.poll.records=10
spring.cloud.stream.kafka.binder.consumer-properties.max.poll.interval.ms=300000
spring.cloud.stream.kafka.binder.consumer-properties.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.kafka.binder.consumer-properties.value.deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
spring.cloud.stream.kafka.binder.consumer-properties.spring.json.trusted.packages=*
spring.kafka.jaas.enabled=true
spring.kafka.properties.security.protocol=SASL_PLAINTEXT
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";


spring.cloud.stream.bindings.TestTopicSink.group=${spring.application.name}.test-topic
spring.cloud.stream.bindings.TestTopicSink.destination=test-topic
spring.cloud.stream.bindings.TestTopicSink.consumer.max-attempts=3
spring.cloud.stream.bindings.TestTopicSink.consumer.retryable-exceptions.java.lang.IllegalStateException=false
spring.cloud.stream.kafka.bindings.TestTopicSink.consumer.ack-mode=record
spring.cloud.stream.kafka.bindings.TestTopicSink.consumer.start-offset=latest
spring.cloud.stream.kafka.bindings.TestTopicSink.consumer.enableDlq=true
spring.cloud.stream.kafka.bindings.TestTopicSink.consumer.dlq-producer-properties.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.kafka.bindings.TestTopicSink.consumer.dlq-producer-properties.configuration.value.serializer=org.apache.kafka.common.serialization.ByteArraySerializer

spring.cloud.stream.bindings.transaction.destination=transactions
spring.cloud.stream.kafka.streams.bindings.transaction.consumer.application-id=transactions-aggregator
spring.cloud.stream.bindings.fraud-alerts.destination=fraud-alerts


spring.cloud.stream.bindings.HighValueTransaction.group=${spring.application.name}.HIGH_VALUE_TRANSACTIONS
spring.cloud.stream.bindings.HighValueTransaction.destination=HIGH_VALUE_TRANSACTIONS
spring.cloud.stream.bindings.HighValueTransaction.consumer.max-attempts=3
spring.cloud.stream.bindings.HighValueTransaction.consumer.retryable-exceptions.java.lang.IllegalStateException=false
spring.cloud.stream.kafka.bindings.HighValueTransaction.consumer.ack-mode=record
spring.cloud.stream.kafka.bindings.HighValueTransaction.consumer.start-offset=latest
spring.cloud.stream.kafka.bindings.HighValueTransaction.consumer.enableDlq=true
spring.cloud.stream.kafka.bindings.HighValueTransaction.consumer.dlq-producer-properties.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.kafka.bindings.HighValueTransaction.consumer.dlq-producer-properties.configuration.value.serializer=org.apache.kafka.common.serialization.ByteArraySerializer







